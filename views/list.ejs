<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8"/>
<title>panorama</title>
<link rel="shortcut icon" href="favicon.ico">
<link rel="stylesheet" href="css/hint.css">
<link rel="stylesheet" href="css/main.css">
<link rel="stylesheet" href="css/list.css">

<script src="js/reqwest.min.js" type="text/javascript"></script>
<script src="js/knockout.min.js" type="text/javascript"></script>
<script src="js/underscore.min.js" type="text/javascript"></script>
<script src="js/moment.min.js" type="text/javascript"></script>
<script>
	var colors = [
		"#807c59",
		"#618059",
		"#73bf60",
		"#ccae8f",
		"#806c59",
		"#bf9060",
		"#65567a",
		"#8860bf",
		"#bfb660",
		"#cc8f8f",
		"#bf6060"
	];

	var viewModel = {
		organization: ko.observable(),
		organizations: ko.observableArray(<%- JSON.stringify(user.organizations) %>),
		loading: ko.observable(false),
		repos: ko.observableArray(),
		pushes: ko.observableArray(),
		filter: ko.observable(),

		getGithubCompareLink: function (push) {
			return 'https://github.com/' + [push.repo.name, 'compare', push.before + '...' + push.head].join('/');
		},
		getPushCommits: function (push) {
			var messages = _.map(_.pluck(push.commits, 'message'), function (msg) {
				return 'â€£ ' + msg;
			});
			return messages.join('\n');
		},
		getPushTime: function (push) {
			return moment(push.date).fromNow(true);
		},
		getPushTooltip: function (push) {
			return this.getPushTime(push) + '\n' + this.getPushCommits(push);
		},
		getSimpleRepoName: function (name) {
			var organization = this.organization();
			if (organization && name && name.indexOf(organization.login + '/') === 0) {
				return name.substr(organization.login.length + 1);
			}
			return name;
		},
		resetFilter: function () {
			viewModel.filter(null);
		},
		setFilter: function (data, event) {
			if (event.target.className === 'repo-tag') {
				viewModel.filter(function (push) { return push.repo.name === data.repo.name; });
			} else if (event.target.className === 'push-user') {
				viewModel.filter(function (push) { return push.user.login === data.user.login; });
			}
		}
	};
	viewModel.filteredPushes = ko.computed(function() {
		var filter = this.filter();
		if (!filter) {
			return this.pushes();
		} else {
			return ko.utils.arrayFilter(this.pushes(), filter);
		}
	}, viewModel);

	window.onload = function () {
		viewModel.organization(_.first(viewModel.organizations()));
		fetchPushes();
		ko.applyBindings(viewModel);
		viewModel.organization.subscribe(fetchPushes);
	};
	function fetchPushes() {
		viewModel.loading(true);

		var org = viewModel.organization();
		var url = org == null ? './a/user/pushes' : './a/organization/' + org.login + '/pushes';
		reqwest({
			url: url,
			type: 'json'
		}).then(function (response) {
			var index = 0;
			var pushes = response.pushes;
			var repos = _.sortBy(_.map(_.groupBy(pushes, function (push) {
				return push.repo;
			}), function (pushes, repo) {
				return {
					name: repo,
					pushes: pushes,
					color: colors[index++ % colors.length]
				};
			}), function (repo) {
				return repo.name;
			});
			_.each(repos, function (repo) {
				_.each(repo.pushes, function (push) {
					push.repo = repo;
				});
			});
			viewModel.repos(repos);
			viewModel.pushes(pushes);
			viewModel.loading(false);
		}).fail(function (err, msg) {
			console.error(msg);
		});
	}
</script>
</head>
<body>
<div class="container">

<% include include/header %>

	<div id="body">
		<div id="content">
			<p class="loading" data-bind="visible: loading">loading...</p>

			<nav data-bind="visible: filter()">
				<button data-bind="click: resetFilter">Clear filter</button>
			</nav>
			<ul class="pushes" data-bind="foreach: filteredPushes">
				<li class="push">
					<time class="push-time" data-bind="text: $root.getPushTime($data)"></time>
					<div class="push-user-container">
						<img class="push-user" data-bind="attr: { src: user.image, alt: user.login, title: user.login }, click: $root.setFilter">
					</div>
					<div class="push-commits">
						<div class="push-commits-intro">
							<a target="_blank" data-bind="attr: { href: $root.getGithubCompareLink($data) }"><span data-bind="text: size + (size === 1 ? ' commit' : ' commits')"></span></a>
							to <a class="repo-tag" data-bind="text: $root.getSimpleRepoName(repo.name), click: $root.setFilter, style: { 'backgroundColor': repo.color }"></a> <!-- ko if: branch !== 'master' -->(<span data-bind="text: branch"></span>)<!-- /ko -->
						</div>
						<p class="push-commits-messages" data-bind="text: $root.getPushCommits($data)"></p>
					</div>
				</li>
			</ul>
		</div>
	</div>

</div>
</body>
</html>