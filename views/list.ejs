<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8"/>
<title>panorama</title>
<link rel="shortcut icon" href="favicon.ico">
<link rel="stylesheet" href="css/hint.css">
<link rel="stylesheet" href="css/main.css">
<link rel="stylesheet" href="css/list.css">

<script src="js/reqwest.min.js" type="text/javascript"></script>
<script src="js/knockout.min.js" type="text/javascript"></script>
<script src="js/underscore.min.js" type="text/javascript"></script>
<script src="js/moment.min.js" type="text/javascript"></script>
<script>
	var colors = [
		"#807c59",
		"#618059",
		"#73bf60",
		"#ccae8f",
		"#806c59",
		"#bf9060",
		"#65567a",
		"#8860bf",
		"#bfb660",
		"#cc8f8f",
		"#bf6060"
	];

	var viewModel = {
		loggedIn: <%= everyauth.loggedIn %>,
		organization: ko.observable(),
		loading: ko.observable(false),
		repos: ko.observableArray(),
		pushes: ko.observableArray(),
		filter: ko.observable(),

		getGithubCompareLink: function (push) {
			return 'https://github.com/' + [viewModel.organization(), push.repo, 'compare', push.before + '...' + push.head].join('/');
		},
		getPushCommits: function (push) {
			var messages = _.map(_.pluck(push.commits, 'message'), function (msg) {
				return 'â€£ ' + msg;
			});
			return messages.join('\n');
		},
		getPushTime: function (push) {
			return moment(push.date).fromNow(true);
		},
		getRepoColor: function (repo) {
			var index = _.indexOf(viewModel.repos(), repo);
			return colors[index % colors.length];
		},
		resetFilter: function () {
			viewModel.filter(null);
		},
		setFilter: function (data, event) {
			if (event.target.className === 'repo-tag') {
				viewModel.filter(function (push) { return push.repo === data.repo; });
			} else if (event.target.className === 'push-user') {
				viewModel.filter(function (push) { return push.user.login === data.user.login; });
			}
		}
	};
	viewModel.filteredPushes = ko.computed(function() {
		var filter = this.filter();
		if (!filter) {
			return this.pushes();
		} else {
			return ko.utils.arrayFilter(this.pushes(), filter);
		}
	}, viewModel);

	window.onload = function () {
		fetchPushes();
		ko.applyBindings(viewModel);
	};
	function fetchPushes() {
		if (!viewModel.loggedIn) {
			return false;
		}

		viewModel.loading(true);
		reqwest({
			url: './a/pushes',
			type: 'json'
		}).then(function (response) {
			viewModel.organization(response.organization);
			viewModel.pushes(response.pushes);
			viewModel.repos(_.pluck(response.map, 'name'));
			viewModel.loading(false);
		}).fail(function (err, msg) {
			console.error(msg);
		});
	}
</script>
</head>
<body>
<div class="container">

<% include include/header %>

	<div id="body">
		<div id="content">
			<p class="loading" data-bind="visible: loading">loading...</p>
			<% if (!everyauth.loggedIn) { %>
			<p class="login-prompt"><a href="auth/github">Login via GitHub</a> to view the activity that matters to you.</p>
			<% } %>

			<nav data-bind="visible: filter()">
				<button data-bind="click: resetFilter">Clear filter</button>
			</nav>
			<ul class="pushes" data-bind="foreach: filteredPushes">
				<li class="push">
					<time class="push-time" data-bind="text: $root.getPushTime($data)"></time>
					<div class="push-user-container">
						<img class="push-user" data-bind="attr: { src: user.image, alt: user.login, title: user.login }, click: $root.setFilter">
					</div>
					<div class="push-commits">
						<div class="push-commits-intro">
							<a target="_blank" data-bind="attr: { href: $root.getGithubCompareLink($data) }"><span data-bind="text: size + (size === 1 ? ' commit' : ' commits')"></span></a>
							to <a class="repo-tag" data-bind="text: repo, click: $root.setFilter, style: { 'background-color': $root.getRepoColor(repo) }"></a> <!-- ko if: branch !== 'master' -->(<span data-bind="text: branch"></span>)<!-- /ko -->
						</div>
						<p class="push-commits-messages" data-bind="text: $root.getPushCommits($data)"></p>
					</div>
				</li>
			</ul>
		</div>
	</div>

</div>
</body>
</html>